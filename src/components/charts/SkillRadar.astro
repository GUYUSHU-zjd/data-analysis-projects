---
// 简化配置，避免复杂的对象处理
const chartConfig = {
  type: 'radar',
  data: {
    labels: ['Python', 'Tableau', 'SQL', 'Excel', '数据可视化', '机器学习', '前端开发'],
    datasets: [{
      label: '技能熟练度',
      data: [90, 85, 80, 85, 80, 65, 70],
      backgroundColor: 'rgba(155, 183, 212, 0.2)',
      borderColor: 'rgba(155, 183, 212, 1)',
      pointBackgroundColor: 'rgba(155, 183, 212, 1)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgba(155, 183, 212, 1)'
    }]
  },
  options: {
    scales: {
      r: {
        angleLines: { color: 'rgba(0, 0, 0, 0.1)' },
        grid: { color: 'rgba(0, 0, 0, 0.1)' },
        pointLabels: { color: '#495867', font: { size: 14 } },
        suggestedMin: 0,
        suggestedMax: 100,
        ticks: { stepSize: 20, backdropColor: 'transparent' }
      }
    },
    plugins: {
      legend: { display: false }
    },
    elements: {
      line: { tension: 0.2 }
    }
  }
};
---

<div>
  <canvas id="skillsRadarChart"></canvas>
</div>

<script>
  // 使用更简单的方式初始化图表
  document.addEventListener('DOMContentLoaded', () => {
    const ctx = document.getElementById('skillsRadarChart');
    if (ctx) {
      // 直接使用配置对象，避免 JSON 序列化问题
      const config = <%= JSON.stringify(chartConfig) %>;
      import('chart.js/auto').then(({ default: Chart }) => {
        new Chart(ctx, config);
      });
    }
  });
</script>