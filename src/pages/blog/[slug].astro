---
import BaseLayout from '../../layouts/BaseLayout.astro';

// 安全地获取内容集合
let posts = [];
try {
  const { getCollection } = await import('astro:content');
  posts = await getCollection('blog');
} catch (error) {
  console.warn('无法获取博客内容集合:', error.message);
}

// 生成静态路径
export async function getStaticPaths() {
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// 获取当前文章
const { slug } = Astro.params;
let post = null;
let Content = null;

if (posts.length > 0) {
  post = posts.find(p => p.slug === slug);
  if (post) {
    try {
      const rendered = await post.render();
      Content = rendered.Content;
    } catch (error) {
      console.warn(`无法渲染文章 "${slug}":`, error.message);
    }
  }
}

// 安全访问属性
const title = post?.data?.title || '未找到文章';
const description = post?.data?.description || '';
const pubDate = post?.data?.pubDate || post?.data?.date;
const tags = post?.data?.tags || [];
const author = post?.data?.author || '未知作者';
---

<BaseLayout title={`${title} | 技术博客`}>
  <article class="max-w-4xl mx-auto px-4 py-8">
    {post ? (
      <>
        <header class="mb-8">
          <h1 class="text-3xl font-bold text-gray-800 mb-2">{title}</h1>
          
          {description && (
            <p class="text-lg text-gray-600 mb-4">{description}</p>
          )}
          
          <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500 mb-4">
            {pubDate && !isNaN(new Date(pubDate)) && (
              <time datetime={new Date(pubDate).toISOString()}>
                发布日期: {new Date(pubDate).toLocaleDateString('zh-CN')}
              </time>
            )}
            
            {tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {tags.map((tag) => (
                  <span class="inline-block bg-gray-100 text-gray-800 px-2 py-1 rounded text-xs">{tag}</span>
                ))}
              </div>
            )}
          </div>
          
          {author && (
            <div class="text-sm text-gray-500">
              作者: {author}
            </div>
          )}
        </header>

        <hr class="my-8 border-gray-200" />

        <div class="prose prose-lg max-w-none mb-12">
          {Content ? <Content /> : <p>无法加载文章内容。</p>}
        </div>

        <footer class="border-t border-gray-200 pt-8 mt-8">
          <div class="flex justify-between items-center">
            <div class="text-sm text-gray-500">
              {author && `作者: ${author}`}
            </div>
            <div class="text-sm text-gray-500">
              <a href="/blog" class="text-blue-600 hover:text-blue-800">
                ← 返回博客列表
              </a>
            </div>
          </div>
        </footer>
      </>
    ) : (
      <div class="text-center py-12">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">文章未找到</h2>
        <p class="text-gray-600 mb-6">抱歉，您访问的文章不存在或已被移除。</p>
        <a href="/blog" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
          返回博客列表
        </a>
      </div>
    )}
  </article>
</BaseLayout>

<style is:global>
  /* 样式保持不变 */
  @tailwind base;
  @tailwind components;
  @tailwind utilities;
  
  .prose {
    color: theme('colors.gray.800');
  }
  
  .prose h2 {
    color: theme('colors.gray.900');
    font-weight: theme('fontWeight.semibold');
    margin-top: theme('spacing.8');
    margin-bottom: theme('spacing.4');
  }
  
  .prose h3 {
    color: theme('colors.gray.900');
    font-weight: theme('fontWeight.semibold');
    margin-top: theme('spacing.6');
    margin-bottom: theme('spacing.3');
  }
  
  .prose p {
    margin-bottom: theme('spacing.4');
  }
  
  .prose ul, .prose ol {
    margin-bottom: theme('spacing.4');
  }
  
  .prose li {
    margin-bottom: theme('spacing.2');
  }
  
  .prose code {
    background-color: theme('colors.gray.100');
    padding: theme('spacing.1');
    border-radius: theme('borderRadius.md');
    font-size: theme('fontSize.sm');
  }
  
  .prose pre {
    background-color: theme('colors.gray.900');
    color: theme('colors.gray.100');
    padding: theme('spacing.4');
    border-radius: theme('borderRadius.lg');
    margin-bottom: theme('spacing.4');
    overflow-x: auto;
  }
  
  .prose blockquote {
    border-left-color: theme('colors.blue.500');
    background-color: theme('colors.blue.50');
    padding: theme('spacing.4');
    border-radius: theme('borderRadius.md');
    margin: theme('spacing.6') 0;
  }
</style>